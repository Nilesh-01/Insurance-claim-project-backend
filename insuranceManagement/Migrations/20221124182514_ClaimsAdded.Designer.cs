// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using insuranceManagement.Data;

namespace insuranceManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221124182514_ClaimsAdded")]
    partial class ClaimsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("insuranceManagement.Data.Models.Claims", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dateOfAccident");

                    b.Property<byte>("document");

                    b.Property<string>("licenseNo");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("insuranceManagement.Data.Models.Policy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("endDate");

                    b.Property<string>("policyName");

                    b.Property<DateTime>("startDate");

                    b.Property<int>("vehicleId");

                    b.HasKey("id");

                    b.HasIndex("vehicleId")
                        .IsUnique();

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("insuranceManagement.Data.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<int>("age");

                    b.Property<DateTime>("dob");

                    b.Property<string>("email");

                    b.Property<string>("name");

                    b.Property<string>("password");

                    b.Property<int>("phone");

                    b.Property<string>("role");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("insuranceManagement.Data.Models.Vehicle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("registrationNo");

                    b.Property<int>("userId");

                    b.Property<string>("vehicleModel");

                    b.Property<string>("vehicleNo");

                    b.Property<string>("vehicleType");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("insuranceManagement.Data.Models.Claims", b =>
                {
                    b.HasOne("insuranceManagement.Data.Models.User", "user")
                        .WithMany("claims")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("insuranceManagement.Data.Models.Policy", b =>
                {
                    b.HasOne("insuranceManagement.Data.Models.Vehicle", "vehicle")
                        .WithOne("policy")
                        .HasForeignKey("insuranceManagement.Data.Models.Policy", "vehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("insuranceManagement.Data.Models.Vehicle", b =>
                {
                    b.HasOne("insuranceManagement.Data.Models.User", "user")
                        .WithMany("vehicles")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
